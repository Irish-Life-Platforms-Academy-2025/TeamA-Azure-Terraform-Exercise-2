jobs:
  - job: plan_terraform
    displayName: "Run Plan"
    steps:
    - task: TerraformInstaller@1
      displayName: 'Install Terraform'
      inputs:
        terraformVersion: 'latest'
      continueOnError: false
    - task: TerraformTaskV4@4
      displayName: 'Run Terraform Init'
      inputs:
        provider: 'azurerm'
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        backendServiceArm: 'devtestserverconnection'
        backendAzureRmResourceGroupName: '$(bkstrgrg)'
        backendAzureRmStorageAccountName: '$(bkstrg)'
        backendAzureRmContainerName: '$(bkcontainer)'
        backendAzureRmKey: '$(bkstrgkey)'
      continueOnError: false
    - task: TerraformTaskV4@4
      displayName: 'Select Workspace'
      inputs:
        provider: 'azurerm'
        command: 'custom'
        customCommand: 'workspace'
        commandOptions: 'select $(env)'
        outputTo: 'console'
        environmentServiceNameAzureRM: 'devtestserverconnection'
        workingDirectory: '$(System.DefaultWorkingDirectory)'

    - task: TerraformTaskV4@4
      displayName: 'Run Terraform Plan'
      inputs:
         provider: 'azurerm'
         command: 'plan'
         #commandOptions: MISSING TFVARS
         environmentServiceNameAzureRM: 'devtestserverconnection'
         workingDirectory: '$(System.DefaultWorkingDirectory)'
         commandOptions: '-out=$(System.DefaultWorkingDirectory)/"terraform-dev.tfplan"'
      continueOnError: false
      
    - task: CopyFiles@2
      displayName: 'Moving Terraform Code to artifact staging'
      inputs:
        Contents: '/**'
        TargetFolder: '$(build.ArtifactStagingDirectory)'
    
    - task: PublishBuildArtifacts@1
      displayName: 'Making artifact available to apply stage'
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'output-${env}'
        publishLocation: 'Container'